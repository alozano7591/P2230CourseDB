// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolPracticeDB.Entities;

#nullable disable

namespace SchoolPracticeDB.Migrations
{
    [DbContext(typeof(CourseDbContext))]
    partial class CourseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SchoolPracticeDB.Entities.Book", b =>
                {
                    b.Property<int?>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("BookId"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearPublished")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("CourseId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Dave Brooks",
                            CourseId = 1,
                            Title = "Math 101",
                            YearPublished = 2019
                        },
                        new
                        {
                            BookId = 2,
                            Author = "William Books",
                            CourseId = 2,
                            Title = "English Writing for dummies",
                            YearPublished = 2009
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Bumba York",
                            CourseId = 2,
                            Title = "Holy Stuff",
                            YearPublished = 2011
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Dave Brooks",
                            CourseId = 1,
                            Title = "Crazy George",
                            YearPublished = 2020
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Dave Brooks",
                            CourseId = 3,
                            Title = "Huehue 1999",
                            YearPublished = 2011
                        });
                });

            modelBuilder.Entity("SchoolPracticeDB.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Credits")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Math 1",
                            Credits = 2
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "English Writing",
                            Credits = 1
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "Network",
                            Credits = 3
                        });
                });

            modelBuilder.Entity("SchoolPracticeDB.Entities.Enrollment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1,
                            Grade = 67
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1,
                            Grade = 93
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 2,
                            Grade = 57
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 2,
                            Grade = 67
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 3,
                            Grade = 65
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 3,
                            Grade = 87
                        });
                });

            modelBuilder.Entity("SchoolPracticeDB.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DateOfBirth = new DateTime(2010, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bart",
                            LastName = "Simpson"
                        },
                        new
                        {
                            StudentId = 2,
                            DateOfBirth = new DateTime(2011, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lisa",
                            LastName = "Simpson"
                        },
                        new
                        {
                            StudentId = 3,
                            DateOfBirth = new DateTime(2012, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Maggie",
                            LastName = "Simpson"
                        },
                        new
                        {
                            StudentId = 4,
                            DateOfBirth = new DateTime(1988, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Homer",
                            LastName = "Simpson"
                        },
                        new
                        {
                            StudentId = 5,
                            DateOfBirth = new DateTime(2001, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bobby",
                            LastName = "Grownie"
                        });
                });

            modelBuilder.Entity("SchoolPracticeDB.Entities.Book", b =>
                {
                    b.HasOne("SchoolPracticeDB.Entities.Course", "Course")
                        .WithMany("Books")
                        .HasForeignKey("CourseId");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("SchoolPracticeDB.Entities.Enrollment", b =>
                {
                    b.HasOne("SchoolPracticeDB.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolPracticeDB.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolPracticeDB.Entities.Course", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("SchoolPracticeDB.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
